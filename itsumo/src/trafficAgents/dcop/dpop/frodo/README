hTis an introductory document to show how to use the framework for running DPOP on the examples, and showing the problems in the GUI.
For any questions, comments, please contact me at adrian.petcu@epfl.ch



Running DPOP: ./runDPOP.sh tests/10.txt.1 result.txt 0
This executes DPOP on the example problem from tests/10.txt.1, and writes the results in result.txt, without displaying a GUI.
                                        
Displaying a problem in the GUI: ./showProblem.sh tests/10.txt.1
This loads up the GUI.
Then, choose the desired layout (currently 0 and 3 work best). 0 is a SpringLayout, and 3 is the pseudotree layout.
ALT+t to start the parser, customize parameters, and then Apply.
You can move nodes around, and play with the layout yourself.

-----------------------------------------------------------------------
-----------------------------------------------------------------------
FILE FORMATS:

-----------------------------------------------------------------------
Problem file

let us take tests/4.txt.1 as an example.
We show the file here, and we mark our explanations with // 
                                        

9       9				// the number of agents and variables in the problem
X0.0(8) 0 1 2 3 4 5 6 7			// One line for each variable
X1.0(8) 0 1 2 3 4 5 6 7			// This is X1.0, which has 8 values: from 0 to 7
X2.0(8) 0 1 2 3 4 5 6 7
X3.0(8) 0 1 2 3 4 5 6 7
X4.0(8) 0 1 2 3 4 5 6 7
X5.0(8) 0 1 2 3 4 5 6 7
X6.0(8) 0 1 2 3 4 5 6 7
X7.0(8) 0 1 2 3 4 5 6 7
X8.0(8) 0 1 2 3 4 5 6 7

// now come the constraints, one on each line
// we discuss the first constraint (the first line)
// The first number is the owner of the constraint (not used here)
// This constraint is between X0.0 and X5.0
// All 64 tuples of this constraint are listed in order, each one with its valuation
// In this particular case, this is an equality constraint that assigns 0 (OK) to all tuples of equal values, and -10000 (very bad) to tuples with different values.

0       0.0@=@5.0       0,0:0   0,1:-10000      0,2:-10000      0,3:-10000      0,4:-10000      0,5:-10000      0,6:-10000      0,7:-10000      1,0:-10000      1,1:0   1,
0       0.0@#@1.0       0,0:-10000      0,1:0   0,2:0   0,3:0   0,4:0   0,5:0   0,6:0   0,7:0   1,0:0   1,1:-10000      1,2:0   1,3:0   1,4:0   1,5:0   1,6:0   1,7:0   2,
0       0.0@#@2.0       0,0:-10000      0,1:0   0,2:0   0,3:0   0,4:0   0,5:0   0,6:0   0,7:0   1,0:0   1,1:-10000      1,2:0   1,3:0   1,4:0   1,5:0   1,6:0   1,7:0   2,
0       1.0@=@3.0       0,0:0   0,1:-10000      0,2:-10000      0,3:-10000      0,4:-10000      0,5:-10000      0,6:-10000      0,7:-10000      1,0:-10000      1,1:0   1,
0       1.0@#@2.0       0,0:-10000      0,1:0   0,2:0   0,3:0   0,4:0   0,5:0   0,6:0   0,7:0   1,0:0   1,1:-10000      1,2:0   1,3:0   1,4:0   1,5:0   1,6:0   1,7:0   2,
0       2.0@=@4.0       0,0:0   0,1:-10000      0,2:-10000      0,3:-10000      0,4:-10000      0,5:-10000      0,6:-10000      0,7:-10000      1,0:-10000      1,1:0   1,
0       2.0@=@8.0       0,0:0   0,1:-10000      0,2:-10000      0,3:-10000      0,4:-10000      0,5:-10000      0,6:-10000      0,7:-10000      1,0:-10000      1,1:0   1,
0       3.0@=@6.0       0,0:0   0,1:-10000      0,2:-10000      0,3:-10000      0,4:-10000      0,5:-10000      0,6:-10000      0,7:-10000      1,0:-10000      1,1:0   1,
1       3.0@#@4.0       0,0:-10000      0,1:0   0,2:0   0,3:0   0,4:0   0,5:0   0,6:0   0,7:0   1,0:0   1,1:-10000      1,2:0   1,3:0   1,4:0   1,5:0   1,6:0   1,7:0   2,
0       5.0@=@7.0       0,0:0   0,1:-10000      0,2:-10000      0,3:-10000      0,4:-10000      0,5:-10000      0,6:-10000      0,7:-10000      1,0:-10000      1,1:0   1,
2       5.0@#@6.0       0,0:-10000      0,1:0   0,2:0   0,3:0   0,4:0   0,5:0   0,6:0   0,7:0   1,0:0   1,1:-10000      1,2:0   1,3:0   1,4:0   1,5:0   1,6:0   1,7:0   2,
3       7.0@#@8.0       0,0:-10000      0,1:0   0,2:0   0,3:0   0,4:0   0,5:0   0,6:0   0,7:0   1,0:0   1,1:-10000      1,2:0   1,3:0   1,4:0   1,5:0   1,6:0   1,7:0   2,
-----------------------------------------------------------------------

Solution file format:

This is a one-line file, that lists the solution found, then the time spent by the algorithm (miliseconds) and the valuation of the solution.
Take this as an example:
[0.0=0 1.0=1 2.0=1 3.0=2 4.0=2 5.0=0 6.0=0 7.0=5 8.0=1 9.0=0 10.0=0 11.0=7 12.0=0 13.0=5 14.0=4 15.0=4]:200:280.0

We see that in this solution, X0.0 is assigned value 0, X1.0 is assigned value 1, etc.
The time spent is 200 ms, and the solution gives 280 units of utility.
 